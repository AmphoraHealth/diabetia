import pandas as pd

_features:list[str] = [
  "years_since_dx",
  "cs_sex",
  "count_cx_w",
  "age_at_wx",
  "age_at_wx_ordinal",
  "dx_age_e11", 
  "dx_age_e11_ordinal",
  "diabetes_mellitus_type_2",
  "essential_(primary)_hypertension",
  "in_glucose_mean",
  "glucose_value",
  "glucose_ordinal",
  "in_glucose_median",
  "in_glucose_max",
  "in_glucose_min",
  "in_glucose_std",
  "in_glucose_slope",
  "fn_fasting_glucose_mean",
  "fn_fasting_glucose_median",
  "fn_fasting_glucose_max",
  "fn_fasting_glucose_min",
  "fn_fasting_glucose_std",
  "fn_fasting_glucose_slope",
  "fn_capillary_glucose_mean",
  "fn_capillary_glucose_median",
  "fn_capillary_glucose_max",
  "fn_capillary_glucose_min",
  "fn_capillary_glucose_std",
  "fn_capillary_glucose_slope",
  "fn_hemoglobin_mean",
  "hemoglobin_value",
  "hemoglobin_ordinal",
  "fn_hemoglobin_median",
  "fn_hemoglobin_max",
  "fn_hemoglobin_min",
  "fn_hemoglobin_std",
  "fn_hemoglobin_slope",
  "fn_triglycerides_mean",
  "triglycerides_value",
  "triglycerides_ordinal",
  "fn_triglycerides_median",
  "fn_triglycerides_max",
  "fn_triglycerides_min",
  "fn_triglycerides_std",
  "fn_triglycerides_slope",
  "fn_ph_mean",
  "fn_ph_median",
  "fn_ph_max",
  "fn_ph_min",
  "fn_ph_std",
  "fn_ph_slope",
  "fn_density_mean",
  "fn_density_median",
  "fn_density_max",
  "fn_density_min",
  "fn_density_std",
  "fn_density_slope",
  "fn_ego_mean",
  "fn_ego_median",
  "fn_ego_max",
  "fn_ego_min",
  "fn_ego_std",
  "fn_ego_slope",
  "fn_urea_mean",
  "fn_urea_median",
  "fn_urea_max",
  "fn_urea_min",
  "fn_urea_std",
  "fn_urea_slope",
  "fn_glycemia_mean",
  "fn_glycemia_median",
  "fn_glycemia_max",
  "fn_glycemia_min",
  "fn_glycemia_std",
  "fn_glycemia_slope",
  "fn_aurico_mean",
  "fn_aurico_median",
  "fn_aurico_max",
  "fn_aurico_min",
  "fn_aurico_std",
  "fn_aurico_slope",
  "fn_creatinine_mean",
  "gfr_value",
  "gfr_ordinal",
  "fn_creatinine_median",
  "fn_creatinine_max",
  "fn_creatinine_min",
  "fn_creatinine_std",
  "fn_creatinine_slope",
  "fn_ego_density_mean",
  "fn_ego_density_median",
  "fn_ego_density_max",
  "fn_ego_density_min",
  "fn_ego_density_std",
  "fn_ego_density_slope",
  "fn_urine_culture_mean",
  "fn_urine_culture_median",
  "fn_urine_culture_max",
  "fn_urine_culture_min",
  "fn_cholesterol_mean",
  "cholesterol_value",
  "cholesterol_ordinal",
  "fn_cholesterol_median",
  "fn_cholesterol_max",
  "fn_cholesterol_min",
  "fn_cholesterol_std",
  "fn_cholesterol_slope",
  "albumin",
  "bacteria",
  "acetone_bilirubin",
  "cylinders",
  "erythrocytes",
  "glucose",
  "hemoglobin",
  "leukocytes"
]

class DemographicLabs:
    """This features were selected by a clinical expert"""
    def fit(data:pd.DataFrame, label, n_features):
        # get the best features
        best_features = {}
        best_features['columns'] = _features
        return best_features